{
  "version": 3,
  "sources": ["../src/js/Events.js", "../src/js/Fetch.js", "../src/js/Game.js", "../src/js/Main.js"],
  "sourcesContent": ["//import {Game} from \"./Game.js\";\n\nexport function Events() {\n\n}\n\n\n\nEvents.prototype.construct = function (_Game) {\n\n\n    Events.prototype.handelInputs.call(_Game);\n\n}\n\nEvents.prototype.handelInputs = function () {\n\n    var _Game = this;\n\n    _Game.helpBtn.addEventListener(\"click\", function (event) {\n\n        event.preventDefault();\n        _Game.checkInputs();\n\n    })\n\n    for (var i = 0; i < this.inputs.length; i++) {\n\n        this.inputs[i].addEventListener(\"focus\", function () {\n            var ix = _Game.arr.indexOf(this.value)\n            if (ix !== -1) {\n                _Game.arr.splice(ix, 1);\n\n            }\n\n\n            this.value = \"\";\n            this.setAttribute(\"placeholder\", \"Type a word\")\n            _Game.helpBtn.innerHTML = \"Get Words\";\n            _Game.controllInput();\n        })\n\n\n        this.inputs[i].addEventListener(\"keypress\", function (event) {\n            if (event.key === \"Enter\") {\n                event.preventDefault();\n                this.blur();\n            }\n        })\n\n        this.inputs[i].addEventListener(\"blur\", function () {\n            if (this.value !== \"\") {\n                _Game.arr.push(this.value);\n            }\n            if (_Game.arr.length === 5) {\n                _Game.helpBtn.innerHTML = \"Start Now\";\n                _Game.controllInput();\n\n            }\n        })\n\n    }\n\n\n}", "export function Fetch() {\n\n    this.m_construct()\n\n\n}\n\n\n\nFetch.prototype.m_construct = function () {\n\n}\n\nFetch.prototype.fetch = function (helpBtn, array, input, _Game) {\n\n    var _Fetch = this;\n\n    (function () {\n        helpBtn.setAttribute(\"disabled\", \"true\")\n        input.setAttribute(\"placeholder\", \"Loading..\")\n        fetch('https://api.api-ninjas.com/v1/randomword',\n            {\n                method: \"GET\",\n                headers: {\n                    \"X-Api-Key\": \"ucXLCy2iy2Zm20z8aem6qg==7IP4UrGTsRw5aoKP\"\n                }\n            })\n            .then(function (response) {\n\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n\n\n            })\n            .then(function (data) {\n\n                var ranWord = data.word;\n                input.value = ranWord;\n                array.push(ranWord);\n\n\n\n            }).then(function () {\n\n                _Fetch.m_address(array, helpBtn, _Game);\n            }\n            )\n            .catch(function (error) {\n                console.error('Error:', error);\n            });\n    })();\n\n\n}\n\n\nFetch.prototype.m_address = function (array, helpBtn, _Game) {\n\n    if (array.length === 5) {\n        helpBtn.removeAttribute(\"disabled\")\n        helpBtn.innerHTML = \"Start Now\";\n        _Game.controllInput();\n    }\n\n}", "import { Events } from \"./Events.js\";\nimport { Fetch } from \"./Fetch.js\";\n\nexport function Game() {\n\n    this.body = document.getElementById(\"body\");\n    this.form = document.createElement(\"form\");\n    this.helpBtn = document.createElement(\"button\");\n    this.arr = [];\n    this.tmp = null;\n    this.m_construct();\n\n}\n\n\nGame.prototype.m_construct = function () {\n\n    this.buildGame()\n\n}\n\nGame.prototype.buildGame = function () {\n    var _Game = this;\n    this.body.innerHTML = \"\";\n    this.body.appendChild(this.form);\n\n    this.form.setAttribute(\"id\", \"input_form\");\n\n    for (var i = 0; i < 5; i++) {\n        var inputElem = document.createElement(\"input\");\n        inputElem.setAttribute(\"placeholder\", \"Type a word\");\n        inputElem.setAttribute(\"type\", \"text\");\n        inputElem.setAttribute(\"class\", \"input\");\n        this.form.appendChild(inputElem)\n    }\n\n\n    this.inputs = document.getElementsByClassName(\"input\");\n\n    var BtnTxt = document.createTextNode(\"Get Words\")\n    this.helpBtn.appendChild(BtnTxt);\n    this.helpBtn.setAttribute(\"id\", \"help\");\n    this.helpBtn.setAttribute(\"type\", \"button\");\n    this.form.appendChild(this.helpBtn);\n    var events = new Events();\n    events.construct(this)\n\n\n}\n\n\nGame.prototype.checkInputs = function () {\n    var _Game = this\n    for (var i = 0; i < this.inputs.length; i++) {\n        var value = this.inputs[i].value;\n        if (value === \"\") {\n            Fetch.prototype.fetch(this.helpBtn, this.arr, this.inputs[i], _Game);\n        }\n    }\n}\n\n\nGame.prototype.controllInput = function (helpBtn, array) {\n    var _Game = this;\n\n    var words = localStorage.setItem(\"words\", JSON.stringify(this.arr));\n    var userId = localStorage.getItem(\"userId\");\n\n    if (this.helpBtn.innerHTML === \"Start Now\") {\n\n        this.helpBtn.addEventListener(\"click\", _Game.address);\n\n\n    } else {\n        this.helpBtn.removeEventListener(\"click\", _Game.address);\n    }\n\n}\n\nGame.prototype.address = async function (event) {\n    var array = localStorage.getItem(\"words\");\n    var userId = localStorage.getItem(\"userId\");\n    var res = await fetch(\"/send\", {\n        method: \"post\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ wordsArray: array, usrId: userId })\n    })\n    var id = await res.json();\n    var arrId = localStorage.setItem(\"arrId\", id);\n    window.location.assign(`round.html?pram=${id}`);\n\n}\n", "import { Game } from \"./Game.js\";\nfunction Main() {\n\n    var _Main = this;\n    this.init = function () {\n        var startBtn = document.getElementById(\"run_game_btn\");\n        startBtn.addEventListener(\"click\", function () {\n\n            var game = new Game();\n        })\n    }\n}\n\nwindow.addEventListener(\"load\", function () {\n    var id = this.localStorage.getItem(\"userId\")\n    if (id) {\n\n        var main = new Main();\n        main.init();\n    } else {\n        this.location.assign(\"login.html\");\n    }\n});\n/**\n * Refresha sidan med ord s\u00E5 att anv\u00E4ndaren inte kan k\u00F6ra samma spelomg\u00E5ng mer \u00E4n en g\u00E5ng\n */\nwindow.addEventListener('pageshow', function (event) {\n    var history = event.persisted ||\n        (typeof window.performance != 'undefined' &&\n\n            window.performance.navigation.type === 2\n        );\n    if (history) {\n        window.location.reload();\n    }\n});\n\n"],
  "mappings": "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",
  "names": ["Events", "_Game", "event", "i", "ix", "Fetch", "helpBtn", "array", "input", "_Game", "_Fetch", "response", "data", "ranWord", "error", "Game", "_Game", "i", "inputElem", "BtnTxt", "events", "Events", "value", "Fetch", "helpBtn", "array", "words", "userId", "event", "res", "id", "arrId", "Main", "_Main", "startBtn", "game", "Game", "id", "main", "event", "history"]
}
